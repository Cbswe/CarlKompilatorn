/* This file was generated by SableCC (http://www.sablecc.org/). */

package lexAndParse.node;

import lexAndParse.analysis.*;

@SuppressWarnings("nls")
public final class AIdxAcsStmt extends PStmt
{
    private PIdentifier _identifier_;
    private TLSq _lSq_;
    private PExp _idx_;
    private TRSq _rSq_;
    private TEq _eq_;
    private PExp _assgn_;
    private TSmc _smc_;

    public AIdxAcsStmt()
    {
        // Constructor
    }

    public AIdxAcsStmt(
        @SuppressWarnings("hiding") PIdentifier _identifier_,
        @SuppressWarnings("hiding") TLSq _lSq_,
        @SuppressWarnings("hiding") PExp _idx_,
        @SuppressWarnings("hiding") TRSq _rSq_,
        @SuppressWarnings("hiding") TEq _eq_,
        @SuppressWarnings("hiding") PExp _assgn_,
        @SuppressWarnings("hiding") TSmc _smc_)
    {
        // Constructor
        setIdentifier(_identifier_);

        setLSq(_lSq_);

        setIdx(_idx_);

        setRSq(_rSq_);

        setEq(_eq_);

        setAssgn(_assgn_);

        setSmc(_smc_);

    }

    @Override
    public Object clone()
    {
        return new AIdxAcsStmt(
            cloneNode(this._identifier_),
            cloneNode(this._lSq_),
            cloneNode(this._idx_),
            cloneNode(this._rSq_),
            cloneNode(this._eq_),
            cloneNode(this._assgn_),
            cloneNode(this._smc_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAIdxAcsStmt(this);
    }

    public PIdentifier getIdentifier()
    {
        return this._identifier_;
    }

    public void setIdentifier(PIdentifier node)
    {
        if(this._identifier_ != null)
        {
            this._identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identifier_ = node;
    }

    public TLSq getLSq()
    {
        return this._lSq_;
    }

    public void setLSq(TLSq node)
    {
        if(this._lSq_ != null)
        {
            this._lSq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lSq_ = node;
    }

    public PExp getIdx()
    {
        return this._idx_;
    }

    public void setIdx(PExp node)
    {
        if(this._idx_ != null)
        {
            this._idx_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._idx_ = node;
    }

    public TRSq getRSq()
    {
        return this._rSq_;
    }

    public void setRSq(TRSq node)
    {
        if(this._rSq_ != null)
        {
            this._rSq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rSq_ = node;
    }

    public TEq getEq()
    {
        return this._eq_;
    }

    public void setEq(TEq node)
    {
        if(this._eq_ != null)
        {
            this._eq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._eq_ = node;
    }

    public PExp getAssgn()
    {
        return this._assgn_;
    }

    public void setAssgn(PExp node)
    {
        if(this._assgn_ != null)
        {
            this._assgn_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._assgn_ = node;
    }

    public TSmc getSmc()
    {
        return this._smc_;
    }

    public void setSmc(TSmc node)
    {
        if(this._smc_ != null)
        {
            this._smc_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._smc_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._identifier_)
            + toString(this._lSq_)
            + toString(this._idx_)
            + toString(this._rSq_)
            + toString(this._eq_)
            + toString(this._assgn_)
            + toString(this._smc_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._identifier_ == child)
        {
            this._identifier_ = null;
            return;
        }

        if(this._lSq_ == child)
        {
            this._lSq_ = null;
            return;
        }

        if(this._idx_ == child)
        {
            this._idx_ = null;
            return;
        }

        if(this._rSq_ == child)
        {
            this._rSq_ = null;
            return;
        }

        if(this._eq_ == child)
        {
            this._eq_ = null;
            return;
        }

        if(this._assgn_ == child)
        {
            this._assgn_ = null;
            return;
        }

        if(this._smc_ == child)
        {
            this._smc_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._identifier_ == oldChild)
        {
            setIdentifier((PIdentifier) newChild);
            return;
        }

        if(this._lSq_ == oldChild)
        {
            setLSq((TLSq) newChild);
            return;
        }

        if(this._idx_ == oldChild)
        {
            setIdx((PExp) newChild);
            return;
        }

        if(this._rSq_ == oldChild)
        {
            setRSq((TRSq) newChild);
            return;
        }

        if(this._eq_ == oldChild)
        {
            setEq((TEq) newChild);
            return;
        }

        if(this._assgn_ == oldChild)
        {
            setAssgn((PExp) newChild);
            return;
        }

        if(this._smc_ == oldChild)
        {
            setSmc((TSmc) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
